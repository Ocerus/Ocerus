/**************************************************************************************
    WidgetLookFeel
**************************************************************************************/

class WidgetLookFeel
{
    StateImagery& getStateImagery(string state) const;
    ImagerySection& getImagerySection(string section) const;
    string getName() const;
    void addImagerySection(const ImagerySection& section);
    void addWidgetComponent(const WidgetComponent& widget);
    void addStateSpecification(const StateImagery& state);
    void addPropertyInitialiser(const PropertyInitialiser& initialiser);
    void clearImagerySections();
    void clearWidgetComponents();
    void clearStateSpecifications();
    void clearPropertyInitialisers();
    void initialiseWidget(Window& widget) const;
    bool isStateImageryPresent(string state) const;
    void addNamedArea(const NamedArea& area);
    void clearNamedAreas();
    const NamedArea& getNamedArea(string name) const;
    bool isNamedAreaDefined(string name) const;
    void layoutChildWidgets(const Window& owner) const;
    void addPropertyDefinition(const PropertyDefinition& propdef);
    void addPropertyLinkDefinition(const PropertyLinkDefinition& propdef);
    void clearPropertyDefinitions();
    void clearPropertyLinkDefinitions();
    //void writeXMLToStream(XMLSerializer& out_stream) const;
    void renameChildren(const Window& widget, string newBaseName) const;

    const PropertyInitialiser* findPropertyInitialiser(string propertyName) const;
    const WidgetComponent* findWidgetComponent(string nameSuffix) const;

    WidgetLookFeel(string name);
    WidgetLookFeel();
};
