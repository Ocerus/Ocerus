
/** 

@mainpage Ocerus Reference Manual
  
  
@section intro Introduction
  
@subsection s1 What is this?
This is a reference manual to Ocerus - a game engine suited for middle-sized <a href="http://en.wikipedia.org/wiki/2.5D">2.5D</a> projects. 2.5D means the physics and most of the graphics are in two dimensions, but some 3D objects are supported as well.
  
@subsection s2 Where to start?
It's probably best starting with the <a href="../../userDocumentation/Documentation.pdf">user guide</a> to Ocerus. It will give you a basic idea about the architecture of the engine and help you orient in the code.


@section architecture Architecture
The engine is divided into bigger parts which group together related code. Each of these parts correspond to a unique namespace. For example, resources are handled by ResourceSystem. So, to learn more about the architecture it's probably best to read the documentation of <a href="namespaces.html">namespaces</a>.


@section settings Project Settings
To support multiple platforms the engine defines a set of global type definitions and macros which control the behaviour
of the application. They all reside in headers in the <i>Setup</i> directory. The main header included in most files
is Settings.h.

@section timeline Project Timeline
There is a project development timeline in the following list:

01/2010 - reviewing existing code, use cases, unit test framework, library structure, log system, utilities

02/2010 - script system, graphic system, entity system, 2D graphic components

03/2010 - entity messages, camera and script component, profiler, memory management

04/2010 - gui system, entity picking, dynamic properties

05/2010 - rendering, gui console, resource system, input system, layer manager

06/2010 - physic and model components, string manager, project management, editor

07/2010 - documentation, poligon collider component

08/2010 - loading screen, resource refreshing, hierarchy window

09/2010 - configuration, sprite animation, testing, sample game

10/2010 - GUI layout component, sample game GUI, shortcuts, documentation, game deploy

11/2010 - testing, reviewing documentation, project deploy
  
*/
